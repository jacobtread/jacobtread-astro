---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import FormattedDate from "@components/FormattedDate.astro";

// Code block font
import "@fontsource/jetbrains-mono/latin-400.css";
import "@assets/styles/blog.scss";

// The type of each blog entry
type BlogEntry = CollectionEntry<"blog">;

// Type of the props provided to each routes in this case its the blog entry
type Props = BlogEntry;

export const getStaticPaths = async () => {
    const posts: BlogEntry[] = await getCollection("blog");
    return posts.map((post: BlogEntry) => ({
        params: { slug: post.slug },
        props: post,
    }));
};

const post = Astro.props;
const { Content } = await post.render();

const {
    title,
    description,
    pubDate,
    updatedDate,
    heroImage,
    socialImage = "/social.jpg",
} = post.data;
---

<Layout title={title} description={description} image={socialImage}>
    <main>
        <a href="/blog" class="back button">Back</a>
        <article class="blog-content">
            {
                heroImage && (
                    <div class="hero">
                        <img
                            class="hero__img"
                            width={720}
                            height={360}
                            src={heroImage}
                            alt=""
                            loading="lazy"
                            decoding="async"
                        />
                    </div>
                )
            }
            <div class="heading">
                <h1 class="title">{title}</h1>
                <p>{description}</p>
                <div class="date">
                    <FormattedDate date={pubDate} />
                    {
                        updatedDate && (
                            <div class="last-updated-on">
                                Last updated on{" "}
                                <FormattedDate date={updatedDate} />
                            </div>
                        )
                    }
                </div>
            </div>
            <hr />
            <Content />
        </article>
    </main>
</Layout>

<style lang="scss">
    @use "@assets/styles/scheme" as scheme;

    .date {
        color: #666;
    }

    .last-updated-on {
        margin-top: 0.5rem;
        font-style: italic;
    }

    .hero {
        position: relative;
        width: 100%;
        height: 20rem;
        overflow: hidden;
        background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 1));
        margin-bottom: 1.5rem;

        &__img {
            position: absolute;
            width: 100%;
            height: auto;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    }

    .back {
        z-index: 1;
        position: fixed;
        top: 1rem;
        left: 1rem;
        display: inline-block;
    }

    .title {
        font-size: 2em;
        margin: 0.25em 0 0;
    }

    .blog-content {
        max-width: scheme.$blog-content-width;
        margin: 2rem auto;
        padding: 2rem;
        background-color: var(--background);
        border: 1px solid var(--border-color);
    }
</style>
