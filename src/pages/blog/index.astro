---
import { SITE_TITLE } from "@/consts";
import { type CollectionEntry, getCollection } from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";
import Layout from "@layouts/Layout.astro";

const PAGE_TITLE = "Blog | " + SITE_TITLE;
const PAGE_DESCRIPTION =
    "Check out my Blog. This is where I post my tech related encounters and updates.";

const RSS_URL = new URL("/blog/rss.xml", Astro.url);

// Type alias for a blog entry
type BlogPost = CollectionEntry<"blog">;

// Obtain the collection of blog posts
const blogPosts: BlogPost[] = await getCollection("blog");

// Sort the blog posts based on publish date
blogPosts.sort(
    (a: BlogPost, b: BlogPost) =>
        b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<Layout title={PAGE_TITLE} description={PAGE_DESCRIPTION}>
    <main class="main section--left">
        <h1 class="section__title">Blog</h1>
        <p class="section__text">
            Check out my blog posts below. I've also provided a link to the RSS
            feed for my blog
        </p>
        <div class="section__actions">
            <a href="/" class="button back">Back</a>
            <div class="rss">
                <span class="rss__title">RSS</span>
                <a class="rss__value" href={RSS_URL} target="_blank">
                    {RSS_URL}
                </a>
            </div>
        </div>
        <ul class="blocks blocks--column posts">
            {
                blogPosts.map((post) => (
                    <li>
                        <a class="post block" href={`/blog/${post.slug}/`}>
                            <h2 class="post__title">
                                {post.data.title + " "}
                                <span class="post__date">
                                    <FormattedDate date={post.data.pubDate} />
                                </span>
                            </h2>
                            <p class="post__desc">{post.data.description}</p>
                        </a>
                    </li>
                ))
            }
        </ul>
    </main>
</Layout>

<style lang="scss">
    @use "@styles/scheme" as scheme;

    .rss {
        $bg-color: #222222;
        $btn-border-color: #333333;
        display: inline-block;
        background-color: $bg-color;
        border: 2px solid $btn-border-color;
        border-radius: 0.25rem;

        &__title {
            font-weight: bold;
            padding-left: 1rem;
            padding-right: 0.5rem;
            font-size: 1.25rem;
            user-select: none;
            color: var(--text);
        }

        &__value {
            display: inline-block;
            color: var(--primary);
            background-color: #151515;
            padding: 0.95rem;
            margin: 0.25rem;
            border-radius: 0.25rem;
        }
    }

    .posts {
        padding: 1rem;
        border: 1px solid var(--border-color);
        opacity: 0;
        animation: in-left 0.5s 0.3s ease forwards;
    }

    .post {
        display: block;
        padding: 1rem;

        &__date {
            font-size: 1rem;
            font-style: italic;
            color: #595959;
            font-weight: normal;
        }

        &:visited {
            color: var(--text);
        }
    }

    @media screen and (max-width: scheme.$screen-small) {
        .back,
        .rss {
            width: 100%;
            display: block;
        }

        .rss {
            padding: 0.5rem;

            &__title {
                display: block;
                padding: 0.5rem;
            }

            &__value {
                display: block;
                width: calc(100% - 0.5rem);
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }
    }
</style>
